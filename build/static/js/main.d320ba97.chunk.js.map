{"version":3,"sources":["api/request.js","api/lxc/index.js","page/lodingPage/lodingPage.js","component/common/Menu/Menu.js","component/common/content/content.js","App.js","api/mock.js","serviceWorker.js","index.js"],"names":["Request","request","options","headers","Content-Type","Object","objectSpread","body","_xtoken","localStorage","getItem","Xtoken","prototype","toString","call","qs","stringify","axios","url","action","method","data","params","timeout","emulateJSON","then","response","catch","e","http","forEach","typs","arguments","length","undefined","extra","loadig","includeToken","toUpperCase","loading","num","LodingPageComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","loginTrueAndFalse","documentWidth","document","documentElement","clientWidth","documentHeight","clientHeight","lodingpageWarpWidth","arrData","setState","sessionStorage","window","addEventListener","handleResize","bind","removeEventListener","target","innerWidth","setItem","spanWidth","react_default","a","createElement","className","style","height","width","display","map","item","index","key","left","animationDelay","onClick","btn_clickfunction","Component","MenuComponent","showDrawer","visible","onClose","needindex","bottomBorder_left","bottomBorder_width","placement","console","log","Route","path","_this2","ref","navDataList","goRouter","fontSize","title","icon","type","drawer","closable","ContentComponent","b","c","carousel","afterChange","onChange","App","Mock","mock","code","navData","message","homeData","lodingShow","post","res","spin","lodingPage_lodingPage","Menu_Menu","content_content","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d320ba97.chunk.js","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n\nexport const Request = {};\n//请求超时时长\nconst TIMEOUT = 5000;\n//http请求授权header属性\n\nvar request = options => {\n    //开放cookie 本地操作 并且操作后的cookie 携带过去\n    // axios.defaults.withCredentials = true;\n    options.headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    };\n\n    options.headers = { ...(options.headers || {}) };\n\n    options.body = { ...(options.body || {}) };\n    //options.body.power = 'user';\n\n    let _xtoken = localStorage.getItem(\"Xtoken\");\n\n    if (_xtoken) {\n        options.body.Xtoken = _xtoken;\n        // document.cookie = 'Xtoken=' + _xtoken;\n        // alert('已写入cookie' + JSON.stringify(document.cookie));\n    }\n\n    //参数格式化\n    if (Object.prototype.toString.call(options.body) === \"[object Object]\") {\n        options.body = qs.stringify(options.body);\n    }\n\n    return axios\n        .request({\n            headers: options.headers,\n            //url: _baseUrl + options.action,\n            url: options.action,\n            method: options.method,\n            data: options.body,\n            params: options.params,\n            timeout: TIMEOUT,\n            emulateJSON: true\n            // })\n        })\n        .then(response => {\n            //请求结束\n            var result = response;\n            // if (result.code >= 401 && result.code <= 405) {\n            //   location.href = '/#/login';\n            //   throw result;\n            // }\n            // if (result && result.code == 200) {\n            //   var msg = (typeof result.message === 'object' ? JSON.stringify(result.message) : result.message)\n\n            //   // alert('接口code不为10000:' + JSON.stringify(result))\n            //   throw result;\n            // }\n            return result;\n        })\n        .catch(e => {\n            // alert('前端请求错误:' + JSON.stringify(e))\n            //抛出异常\n            throw e;\n        });\n};\n//http请求方式\nconst http = {};\n[\"get\", \"post\", \"put\", \"delete\"].forEach(method => {\n    http[method] = (\n        action,\n        params,\n        typs = 1,\n        extra = { headers: {}, loadig: false, includeToken: false }\n    ) => {\n        method = method.toUpperCase();\n        if (process.env.NODE_ENV === \"development\") {\n            // 测试接口\n            // if (typs === 1) action = \"https://easy-mock.com/mock/5d50c956a0bd8471d34d5ddb\" + action;\n            // if (typs === 1) action = \"https://mock.yonyoucloud.com/mock/2122\" + action;\n            if (typs === 1) action = \"\" + action;\n        } else {\n            // 正式接口\n            // if (typs === 1) action = \"https://easy-mock.com/mock/5d50c956a0bd8471d34d5ddb\" + action; \n            // if (typs === 1) action = \"https://mock.yonyoucloud.com/mock/2122\" + action; \n            if (typs === 1) action = \"\" + action;      \n\t\t}\n        if (method === \"GET\") {\n            return request({\n                action,\n                params,\n                method,\n                headers: extra.headers,\n                loading: extra.loading,\n                includeToken: extra.includeToken\n            });\n        }\n        return request({\n            action,\n            body: params,\n            method,\n            headers: extra.headers,\n            loading: extra.loading,\n            includeToken: extra.includeToken\n        });\n    };\n});\nRequest.http = http;\n","import axios from \"axios\";\nimport { Request } from \"../request\";\n\nlet num =1;\n\n//首页数据    \nexport function homeData(params) {\n    return Request.http.post(\"/admin/homeData\", params, num);\n} \n","import React, { Component } from 'react';\nimport \"./lodingPage.scss\";\n// import LandPageComponent from \"./components/landPage.js\";\n\n\nclass LodingPageComponent extends Component {\n\n  constructor(props){\n  \tsuper(props);\n  \tthis.state={\n      loginTrueAndFalse:\"none\",//根据登录状态进行过组件显示隐藏的判断\n  \t\tdocumentWidth: document.documentElement.clientWidth || document.body.clientWidth,\n  \t\tdocumentHeight: document.documentElement.clientHeight || document.body.clientHeight ,\n  \t\tlodingpageWarpWidth:'100%', //.lodingpage_warp  宽度定义\n  \t\tarrData:['W','E','L','C','O','M','E'],\n  \t}\n  }\n  componentWillMount(){    \n    this.setState({ loginTrueAndFalse:sessionStorage.getItem(\"login\")===\"true\"?\"none\":\"block\" })//如果已经登录 ---  不显示一进页面的动画组件\n  \twindow.addEventListener('resize', this.handleResize.bind(this)) //监听窗口大小改变\n  }\n  componentWillUnmount() {       \n    window.removeEventListener('resize', this.handleResize.bind(this))//组件挂掉之后接触事件绑定\n  }\n  handleResize(e){\n    // console.log('浏览器窗口大小改变事件', e.target.innerWidth)\n    this.setState({ \n    \tdocumentWidth : e.target.innerWidth ,\n    \tdocumentHeight: document.documentElement.clientHeight || document.body.clientHeight ,\n    })\n  }\n  btn_clickfunction(){//点击“————>”进行登录 , 并改变session的状态\n    sessionStorage.setItem(\"login\",\"true\")\n  \tthis.setState({ lodingpageWarpWidth:0 })\n  }\n\n  render() {\n  \t//根据不同屏幕进行文字 || 宽度 进行适配\n\tlet documentWidth=this.state.documentWidth;\n\tlet spanWidth=documentWidth<=375?24 : documentWidth<=768?40 : 80 ;\n\n\treturn (\n      <div className=\"lodingpage_warp\" style={{height:this.state.documentHeight,width:this.state.lodingpageWarpWidth,display:this.state.loginTrueAndFalse}} >\n      \t<div className=\"text_warp\" style={{width:this.state.arrData.length*spanWidth+'px'}}>\n\t       \t{\n\t       \t\tthis.state.arrData.map((item,index)=>{\n\t       \t\t\treturn(\n\t       \t\t\t\t<span key={index} style={{left:spanWidth*index+'px',animationDelay:0.2*index+'s'}}>{item}</span>\n\t       \t\t\t)\n\t       \t\t})\n\t       \t}\n       \t</div>\n       \t<div className=\"btn_warp\" onClick={this.btn_clickfunction.bind(this)}>\n       \t\t<div className=\"btn_right_border\"></div>\n       \t\t<div className=\"btn_top_border\"></div>\n       \t\t<div className=\"btn_bottom_border\"></div>\n       \t\t<div className=\"btn_left_border\"></div>\n       \t\t<div className=\"btn_jianTou\"> > </div>\n       \t\t<div className=\"btn_jianTou_border\"></div>\n       \t</div>\t\n      </div>\n    )\n  }\n}\n\nexport default LodingPageComponent;","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router';\nimport \"./Menu.scss\";\nimport { Drawer , Icon} from 'antd';\n\nclass MenuComponent extends Component {\n  constructor(props){\n  \tsuper(props);\n  \tthis.state={\n      needindex:0,\n      bottomBorder_left:0,\n      bottomBorder_width:0, \n\t  visible: false, \n\t  placement: 'top',//定义选择框方位 \n  \t}\n  }\n  componentDidMount(){ \n    console.log( Route)\n  }\n  goRouter(path,index){  //路由跳转  \n    this.setState({\n      needindex:index,\n    }) \n  }\n  showDrawer = () => { //显示弹出框 menu\n    this.setState({\n      visible: true,\n    });\n  };\n  onClose = () => { //关闭弹出框 menu\n\tthis.setState({\n\t  visible: false,\n\t});\n  };\n  render() {    \n    return (\n      <div className=\"navConainer\">\n\t\t    <div className=\"navConainer_sub\">\n\t\t\t\t<div className=\"leftDiv_p\">\n\t\t\t\t\t<div className=\"leftDiv\"></div>\n\t\t\t\t\t<span>刘学超***</span>\n\t\t\t\t</div>\n\t\t\t\t<ul ref=\"munLiUl\">\n\t\t\t\t  { \n\t\t\t\t\tthis.props.navDataList.map((item,index)=>{\n\t\t\t\t\t return(\n\t\t\t\t\t\t<li key={index} onClick={this.goRouter.bind(this,item.path,index)}>\n\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t  <dt style={{fontSize:this.state.needindex===index?'18px':'14px'}}>{item.title}</dt>\n\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t<div className=\"bottomBorder\" style={{height:this.state.needindex===index?3+'px':0}}></div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t  )\n\t\t\t\t\t})\n\t\t\t\t  }\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"menu_top_icon\">\n\t\t\t\t\t<Icon type=\"appstore\" onClick={this.showDrawer}/>\n\t\t\t\t\t<Drawer\n\t\t\t\t\t  // title=\"Basic Drawer\"\n\t\t\t\t\t  placement={this.state.placement}\n\t\t\t\t\t  closable={true}\n\t\t\t\t\t  onClose={this.onClose}\n\t\t\t\t\t  visible={this.state.visible}\n\t\t\t\t\t>\n\t\t\t\t\t  {\n\t\t\t\t\t\tthis.props.navDataList.map((item,index)=>{\n\t\t\t\t\t\t return(\n\t\t\t\t\t\t\t<p>{item.title}</p>\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t})\n\t\t\t\t\t  }\n\t\t\t\t\t</Drawer>\n\t\t\t\t</div>\n\t\t\t</div>\n      </div>\n    )\n  }\n}\n /*<dd style={{fontSize:this.state.needindex===index?'14px':'12px'}}>{item.translate}</dd>*/\nexport default MenuComponent;","import React, { Component } from 'react';\nimport \"./content.scss\";\nimport { Carousel } from 'antd';\n\nclass ContentComponent extends Component {\n  constructor(props){\n  \tsuper(props);\n  \tthis.state={\n  \t\t\n  \t}\n  }\n  carouselOnChange(a, b, c) {\n\tconsole.log(a, b, c);\n  }\n  render() {\n    return (\n      <h1 className=\"mainConainer\">\n      \t<Carousel afterChange={this.onChange}>\n\t\t    <div>\n\t\t      <h3>1</h3>\n\t\t    </div>\n\t\t    <div>\n\t\t      <h3>2</h3>\n\t\t    </div>\n\t\t    <div>\n\t\t      <h3>3</h3>\n\t\t    </div>\n\t\t    <div>\n\t\t      <h3>4</h3>\n\t\t    </div>\n\t\t </Carousel>\n      </h1>\n    )\n  }\n}\n\n\nexport default ContentComponent;","import React, { Component } from 'react';\nimport './App.css';\nimport { homeData } from \"./api/lxc\";\nimport LodingPageComponent from './page/lodingPage/lodingPage'; //引入登录组件\nimport MenuComponent from './component/common/Menu/Menu'; // 引入顶部菜单\nimport ContentComponent from './component/common/content/content';  //引入内容组件\nimport { Icon } from 'antd'; \nimport './api/mock.js';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={  \n      homeData:\"\",//定义首页数据源\n      lodingShow:false\n    }\n  }\n  componentWillMount(){\n    //请求首页数据\n    this.setState({ lodingShow : true })//显示loding\n    homeData().then(res=>{\n\t  console.log(res)\n      this.setState({ \n        homeData : res.data.data ,\n        lodingShow : false\n      })//赋值给homeData数据\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\"> \n      <Icon type=\"setting\" spin className=\"lodingstyle\" style={{display:this.state.lodingShow?'block':'none'}}/>\n        <div className=\"conainer\">\n        \t<LodingPageComponent/>\n          <div className=\"conainer_main\">\n            <MenuComponent navDataList={this.state.homeData.navData?this.state.homeData.navData:[]}/>\n            <ContentComponent/>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Mock from 'mockjs'\n\n\nexport default Mock.mock('/admin/homeData','post',{\n\tcode:\"1\",\n\tdata:{\n\t    navData:[\n\t        {\n\t            path:\"\",\n\t            title:\"关于我\",\n\t        },\n\t\t\t{\n\t\t\t    path:\"\",\n\t\t\t    title:\"技术栈\",\n\t\t\t},\n\t\t\t{\n\t\t\t    path:\"\",\n\t\t\t    title:\"工作项目\",\n\t\t\t},\n\t\t\t{\n\t\t\t    path:\"\",\n\t\t\t    title:\"个人项目\",\n\t\t\t},\n\t\t\t{\n\t\t\t    path:\"\",\n\t\t\t    title:\"简历\",\n\t\t\t},\n\t\t\t{\n\t\t\t    path:\"\",\n\t\t\t    title:\"联系我\",\n\t\t\t}\n\t    ]\n\t},\n\tmessage:\"success\"\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}